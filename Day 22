Problem 1 : Add to Array-Form of Integer
https://leetcode.com/problems/add-to-array-form-of-integer/description/
class Solution {
    public List<Integer> addToArrayForm(int[] num, int k) {
        List<Integer> ans = new ArrayList<>();
        int i = num.length -1;

        while(i >= 0 || k > 0){
            if(i >= 0){
                k += num[i];
            }
            ans.add(0,k%10);
            k = k / 10;
            i--;
        }
        return ans;
    }
}

Problem 2 : Count Items Matching a Rule
https://leetcode.com/problems/count-items-matching-a-rule/description/
lass Solution {
    public int countMatches(List<List<String>> items, String ruleKey, String ruleValue) {
        int index ;
        if(ruleKey.equals("type")){
            index = 0;
        }else if (ruleKey.equals("color") ){
            index = 1;
        }else{
            index = 2;
        }
        int count = 0;
        for(int i = 0 ; i < items.size() ; i++){
            if(items.get(i).get(index).equals(ruleValue)){
                count++;
            }
        }

return count;
    }
}
Problem 3 : Black Square
https://codeforces.com/contest/431/problem/A

import java.util.Scanner;
 
public class blackSquare {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] arr = new int[4];
        for (int i = 0; i < arr.length; i++) {
            arr[i] = sc.nextInt();
        }
        sc.nextLine();
        String str = sc.nextLine();
        int count = 0;
        for (int i = 0; i < str.length(); i++) {
            char ch = str.charAt(i);
            int a = Character.getNumericValue(ch);
            count = count + arr[a-1];
        }
        System.out.println(count);
    }
}
