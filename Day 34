Problem 1 : Find All Duplicates in an Array
Problem - https://leetcode.com/problems/find-all-duplicates-in-an-array/description/
class Solution {
    public List<Integer> findDuplicates(int[] nums) {
         List<Integer> duplicates = new ArrayList<>();

        // Sort the array
        int i = 0;
        while (i < nums.length) {
            int correct = nums[i] - 1;

            if (nums[i] != nums[correct]) {
                int temp = nums[i];
                nums[i] = nums[correct];
                nums[correct] = temp;
            } else {
                i++;
            }
        }

        int num = 0;
        for (i = 0; i < nums.length; i++) {
            if (nums[i] != i+1 && num != nums[i]) {
                num = nums[i];
                duplicates.add(num);

    }
} return duplicates;
}
}

Problem 2 : Sum of Round Numbers
Problem - https://codeforces.com/contest/1352/problem/A
import java.util.*;
 
public class Try
{
	public static void main(String args[])
	{
		Scanner br=new Scanner(System.in);
		int t=br.nextInt();
		while(t>0)
		{
			t--;int n=br.nextInt();int s=0,s1=1;
			String str="";
			while(n!=0)
			{
				if(n%10!=0)
				{
					s++;
					str+=(n%10)*s1+" ";
				}
				s1*=10;
				n/=10;
			}
			System.out.println(s);
			System.out.println(str);
		}
	}
}
